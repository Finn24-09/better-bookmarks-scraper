services:
  better-bookmarks-scraper:
    build: 
      context: .
      target: production
    container_name: better-bookmarks-scraper
    image: better-bookmarks-scraper:latest
    ports:
      - "${PORT:-8080}:8080"
    # Option 1: Use .env file (recommended for production)
    env_file:
      - .env
    # Option 2: Override or add specific environment variables
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-8080}
      - API_KEY=${API_KEY:-your-secret-api-key-here}
      - REQUIRE_API_KEY=${REQUIRE_API_KEY:-true}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-https://yourdomain.com,https://anotherdomain.com}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      - BLOCK_PRIVATE_IPS=${BLOCK_PRIVATE_IPS:-true}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - screenshots_data:/tmp/screenshots
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080/health/live', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
    networks:
      - better-bookmarks-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  screenshots_data:
    driver: local

networks:
  better-bookmarks-network:
    driver: bridge
